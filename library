-- EclipseUILibrary.lua
-- Modular, reusable UI library matching your Eclipse GUI reference
-- Supports: Buttons, Toggles, Sliders, Dropdowns, Textboxes, Keybinds, Labels, Sections

local EclipseUILibrary = {}
EclipseUILibrary.__index = EclipseUILibrary

local function create(class, props)
    local inst = Instance.new(class)
    for k, v in pairs(props) do
        inst[k] = v
    end
    return inst
end

local function getNextY(section)
    local y = 0.12
    for _, child in ipairs(section:GetChildren()) do
        if child:IsA("Frame") or child:IsA("TextButton") or child:IsA("TextBox") or child:IsA("TextLabel") then
            y = y + child.Size.Y.Scale + 0.02
        end
    end
    return y
end

function EclipseUILibrary.CreateWindow(title)
    local self = setmetatable({}, EclipseUILibrary)

    -- Main GUI
    local gui = create("ScreenGui", {
        Name = "EclipseGUI",
        Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui"),
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })

    -- Main Frame
    local mainFrame = create("Frame", {
        Name = "MainFrame",
        Parent = gui,
        BackgroundColor3 = Color3.fromRGB(7, 7, 7),
        BorderSizePixel = 0,
        Position = UDim2.new(0.26598835, 0, 0.275419861, 0),
        Size = UDim2.new(0.634831786, 0, 0.482990801, 0)
    })
    create("UICorner", {Parent = mainFrame, CornerRadius = UDim.new(0, 14)})

    -- Header
    create("TextLabel", {
        Name = "TextLabel-Header",
        Parent = mainFrame,
        BackgroundTransparency = 1,
        Position = UDim2.new(0.0559853315, 0, 0.0302262437, 0),
        Size = UDim2.new(0.250128567, 0, 0.0431636423, 0),
        Font = Enum.Font.FredokaOne,
        Text = title or "Eclipse Hub | Version: 1.35",
        TextColor3 = Color3.fromRGB(255, 80, 80),
        TextScaled = true,
        TextSize = 14,
        TextWrapped = true
    })

    -- Left Section
    local left = create("Frame", {
        Name = "GeneralFrameleft1",
        Parent = mainFrame,
        BackgroundColor3 = Color3.fromRGB(17, 17, 17),
        BorderSizePixel = 0,
        Position = UDim2.new(0.209897831, 0, 0.118767127, 0),
        Size = UDim2.new(0.371992737, 0, 0.508837581, 0)
    })
    create("UICorner", {Parent = left, CornerRadius = UDim.new(0, 14)})

    -- Right Section
    local right = create("Frame", {
        Name = "GeneralFrameright2",
        Parent = mainFrame,
        BackgroundColor3 = Color3.fromRGB(17, 17, 17),
        BorderSizePixel = 0,
        Position = UDim2.new(0.613037109, 0, 0.118767127, 0),
        Size = UDim2.new(0.371992737, 0, 0.508837581, 0)
    })
    create("UICorner", {Parent = right, CornerRadius = UDim.new(0, 14)})

    -- Section API
    local function makeSection(parent, sectionName)
        local section = create("Frame", {
            Name = sectionName .. "Section",
            Parent = parent,
            BackgroundTransparency = 1,
            Size = UDim2.new(1, 0, 1, 0),
            Position = UDim2.new(0, 0, 0, 0)
        })
        local y = 0.02
        local function addLabel(text)
            local label = create("TextLabel", {
                Parent = section,
                BackgroundTransparency = 1,
                Position = UDim2.new(0.05, 0, y, 0),
                Size = UDim2.new(0.9, 0, 0.08, 0),
                Font = Enum.Font.FredokaOne,
                Text = text,
                TextColor3 = Color3.fromRGB(132, 132, 132),
                TextScaled = true,
                TextSize = 14,
                TextWrapped = true
            })
            y = y + 0.1
            return label
        end
        local function addButton(text, callback)
            local btn = create("TextButton", {
                Parent = section,
                BackgroundColor3 = Color3.fromRGB(255, 80, 80),
                Position = UDim2.new(0.05, 0, y, 0),
                Size = UDim2.new(0.9, 0, 0.08, 0),
                Font = Enum.Font.FredokaOne,
                Text = text,
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextScaled = true
            })
            btn.MouseButton1Click:Connect(function()
                if callback then callback() end
            end)
            y = y + 0.1
            return btn
        end
        local function addToggle(text, callback)
            local state = false
            local toggle = create("TextButton", {
                Parent = section,
                BackgroundColor3 = Color3.fromRGB(255, 80, 80),
                Position = UDim2.new(0.05, 0, y, 0),
                Size = UDim2.new(0.9, 0, 0.08, 0),
                Font = Enum.Font.FredokaOne,
                Text = text .. ": Off",
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextScaled = true
            })
            toggle.MouseButton1Click:Connect(function()
                state = not state
                toggle.Text = text .. ": " .. (state and "On" or "Off")
                if callback then callback(state) end
            end)
            y = y + 0.1
            return toggle
        end
        local function addSlider(text, min, max, callback)
            local sliderLabel = create("TextLabel", {
                Parent = section,
                BackgroundTransparency = 1,
                Position = UDim2.new(0.05, 0, y, 0),
                Size = UDim2.new(0.6, 0, 0.08, 0),
                Font = Enum.Font.FredokaOne,
                Text = text .. ": " .. tostring(min),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextScaled = true
            })
            local slider = create("TextButton", {
                Parent = section,
                BackgroundColor3 = Color3.fromRGB(255, 80, 80),
                Position = UDim2.new(0.7, 0, y, 0),
                Size = UDim2.new(0.25, 0, 0.08, 0),
                Text = "",
            })
            local value = min
            slider.MouseButton1Click:Connect(function()
                value = value + 1
                if value > max then value = min end
                sliderLabel.Text = text .. ": " .. tostring(value)
                if callback then callback(value) end
            end)
            y = y + 0.1
            return slider
        end
        local function addDropdown(text, list, callback)
            local dropdown = create("TextButton", {
                Parent = section,
                BackgroundColor3 = Color3.fromRGB(53, 53, 53),
                Position = UDim2.new(0.05, 0, y, 0),
                Size = UDim2.new(0.9, 0, 0.08, 0),
                Font = Enum.Font.FredokaOne,
                Text = text .. ": " .. tostring(list[1]),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextScaled = true,
                TextXAlignment = Enum.TextXAlignment.Left
            })
            local current = list[1]
            dropdown.MouseButton1Click:Connect(function()
                local idx = table.find(list, current) or 1
                idx = idx + 1
                if idx > #list then idx = 1 end
                current = list[idx]
                dropdown.Text = text .. ": " .. tostring(current)
                if callback then callback(current) end
            end)
            y = y + 0.1
            return dropdown
        end
        local function addTextbox(placeholder, callback)
            local textbox = create("TextBox", {
                Parent = section,
                BackgroundColor3 = Color3.fromRGB(29, 29, 29),
                Position = UDim2.new(0.05, 0, y, 0),
                Size = UDim2.new(0.9, 0, 0.08, 0),
                Font = Enum.Font.FredokaOne,
                Text = "",
                PlaceholderText = placeholder,
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextScaled = true
            })
            textbox.FocusLost:Connect(function(enter)
                if enter and callback then callback(textbox.Text) end
            end)
            y = y + 0.1
            return textbox
        end
        local function addKeybind(text, key, callback)
            local keybind = create("TextButton", {
                Parent = section,
                BackgroundColor3 = Color3.fromRGB(255, 80, 80),
                Position = UDim2.new(0.05, 0, y, 0),
                Size = UDim2.new(0.9, 0, 0.08, 0),
                Font = Enum.Font.FredokaOne,
                Text = text .. ": " .. tostring(key.Name),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextScaled = true
            })
            local UserInputService = game:GetService("UserInputService")
            UserInputService.InputBegan:Connect(function(input, gpe)
                if not gpe and input.KeyCode == key then
                    if callback then callback() end
                end
            end)
            y = y + 0.1
            return keybind
        end
        return {
            AddLabel = addLabel,
            AddButton = addButton,
            AddToggle = addToggle,
            AddSlider = addSlider,
            AddDropdown = addDropdown,
            AddTextbox = addTextbox,
            AddKeybind = addKeybind
        }
    end

    self.LeftSection = makeSection(left, "Left")
    self.RightSection = makeSection(right, "Right")
    self.Gui = gui
    self.MainFrame = mainFrame
    return self
end

return EclipseUILibrary
